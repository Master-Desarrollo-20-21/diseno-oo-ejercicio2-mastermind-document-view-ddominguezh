@startuml Chess

class MasterMind {}

package v10.exercise.models {
  
    class Game {
        +reset()
    	+getNumAttempts(): int
    	+getAttempts(): Attempt[]
    	+ add: void { ProposedCombination }
    	+ finish(): boolean
    	+ isWinner(): boolean
    }
    
    class Attempt {
        +isWinner(): boolean
        +getResult(): String
    }
    class Combination {
        +{static} getLength() : int
    }
    
    class ProposedCombination {
        +isValidLength(): boolean
    	+isValidColors(): boolean
    	+haveRepeatingColors(): boolean
    	+toString(): String
    }
    
    class SecretCombination {
        +generate()
    	+compare(): Pig[] { ProposedCombination }
    }
    
    enum Color {
        +{static} valueOf(): Color { char }
        +shortName: char
        +{static} shortName(): String
    }
    enum Pig {}

}

package v10.exercise.views {
  
    abstract class AbstractView {
        abstract interact(): void
    }
    abstract class GameView {}

    class View {}
    class StartView {}
    class PlayView {}
    class ResumeView {
        +isResume(): boolean
    }
    
    class SecretCombinationView {}
    class AttempsCombinationView {}
    class CreateProposedCombinationView {
        +getProposed(): ProposedCombination
    }
    class FinishView {}
    
}

package v10.exercise.utils {
    
    class YesNoDialog {
        +interact(): void
        +isAnswerYes(): boolean
    }
    
    class Console {}
    
    enum Message {}
    
}

Combination <|-- SecretCombination
Combination <|-- ProposedCombination

AbstractView <|-- GameView
AbstractView <|-- View
AbstractView <|-- StartView
AbstractView <|-- SecretCombinationView
AbstractView <|-- CreateProposedCombinationView
AbstractView <|-- AttempsCombinationView
AbstractView <|-- FinishView

GameView <|-- PlayView
GameView <|-- ResumeView

MasterMind *--> View

View *--> StartView
View *--> PlayView
View *--> ResumeView

PlayView *--> SecretCombinationView
PlayView ..> FinishView
PlayView ..> CreateProposedCombinationView
PlayView ..> AttempsCombinationView

CreateProposedCombinationView ..> ProposedCombination
AttempsCombinationView ..> "1, 10" Attempt

ResumeView *--> YesNoDialog

GameView *--> Game
Game *--> SecretCombination
Game *--> "1, 10" Attempt
Game ..> ProposedCombination

SecretCombination ..> ProposedCombination
SecretCombination ..> Pig

Combination *--> "4" Color
Attempt *--> ProposedCombination
Attempt *--> "4" Pig

@enduml
